name: Build Kernel (Kleaf)

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            bc \
            bison \
            flex \
            git \
            curl \
            zip \
            unzip \
            lz4 \
            zstd \
            libssl-dev \
            openjdk-17-jdk \
            python3 \
            python3-pip

      - name: Setup Bazel via Bazelisk
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Ensure wabazl MODULE.bazel exists
        run: |
          if [ ! -f MODULE.bazel ]; then
            cat > MODULE.bazel <<'EOF'
module(
  name = "kernel_xiaomi_peridot",
  version = "1.0",
  repo_name = "kernel_xiaomi_peridot",
)

bazel_dep(name = "bazel_skylib", version = "1.4.2")
bazel_dep(name = "rules_cc", version = "0.0.8")
EOF
          fi

      - name: Ensure Kleaf BUILD.bazel exists
        run: |
          mkdir -p build/kernel/kleaf
          if [ ! -f build/kernel/kleaf/BUILD.bazel ]; then
            # Needed to allow loading common_kernels.bzl
            echo "exports_files([\"common_kernels.bzl\"])" > build/kernel/kleaf/BUILD.bazel
          fi

      - name: Build kernel with Kleaf
        run: |
          bazel build //:peridot_dist --verbose_failures || bazel build //:allmods_peridot --verbose_failures

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-artifacts
          path: |
            bazel-bin/**/*.img
            bazel-bin/**/*.zip
            bazel-bin/**/*.tar.gz
            bazel-bin/**/*.bin
