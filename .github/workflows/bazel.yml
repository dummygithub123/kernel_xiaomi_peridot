name: Build Xiaomi Peridot Kernel (Poco F6)

on:
  workflow_dispatch:
    inputs:
      defconfig:
        description: "Kernel defconfig"
        required: true
        default: "peridot_defconfig"
      compress:
        description: "Compress Image (gzip/none)"
        required: true
        default: "gzip"
      lto:
        description: "Enable LTO (thin/full/none)"
        required: true
        default: "thin"

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      CC: clang
      LD: ld.lld
      ARCH: arm64
      SUBARCH: arm64
      CLANG_DIR: ${{ github.workspace }}/toolchains/clang
      GCC64_DIR: ${{ github.workspace }}/toolchains/gcc64
      PATH: ${{ github.workspace }}/toolchains/clang/bin:${{ github.workspace }}/toolchains/gcc64/bin:${{ env.PATH }}
    steps:
      - name: Checkout kernel source
        uses: actions/checkout@v4
        with:
          path: kernel

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y bc bison build-essential clang curl flex git \
            libelf-dev libssl-dev lld llvm lz4 python3 rsync tar cpio \
            unzip wget xz-utils libncurses5-dev dwarves

      - name: Download AOSP toolchains
        run: |
          mkdir -p toolchains && cd toolchains
          curl -L https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/master/clang-r450784d.tar.gz -o clang.tar.gz
          mkdir clang && tar -xf clang.tar.gz -C clang
          curl -L https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/master.tar.gz -o gcc64.tar.gz
          mkdir gcc64 && tar -xf gcc64.tar.gz -C gcc64

      - name: Configure kernel
        working-directory: kernel
        run: |
          export PATH="${CLANG_DIR}/bin:${GCC64_DIR}/bin:${PATH}"
          export CROSS_COMPILE=aarch64-linux-android-
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export LLVM=1
          export LLVM_IAS=1
          make O=out ${{ inputs.defconfig }}
          case "${{ inputs.lto }}" in
            thin) scripts/config --file out/.config -e LTO_CLANG -e LTO_CLANG_THIN -d LTO_NONE ;;
            full) scripts/config --file out/.config -e LTO_CLANG -e LTO_CLANG_FULL -d LTO_NONE ;;
            none) scripts/config --file out/.config -d LTO_CLANG -d LTO_CLANG_THIN -d LTO_CLANG_FULL -e LTO_NONE ;;
          esac
          yes "" | make O=out olddefconfig

      - name: Build kernel
        working-directory: kernel
        run: |
          export PATH="${CLANG_DIR}/bin:${GCC64_DIR}/bin:${PATH}"
          export CROSS_COMPILE=aarch64-linux-android-
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export LLVM=1
          export LLVM_IAS=1
          make -j$(nproc) O=out
          if [ "${{ inputs.compress }}" = "gzip" ]; then
            gzip -c out/arch/arm64/boot/Image > out/arch/arm64/boot/Image.gz
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: peridot-kernel-${{ github.run_number }}
          path: |
            kernel/out/arch/arm64/boot/Image*
