name: Build Xiaomi Peridot Kernel

on:
  push:
    branches:
      - main
      - github-action-build
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-latest

    env:
      ARCH: arm64
      CROSS_COMPILE: aarch64-linux-gnu-

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Install dependencies & cross compiler
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential bc ccache libncurses-dev git flex bison libssl-dev \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libelf-dev pkg-config \
            zlib1g-dev libudev-dev libncurses5-dev

      # 3. Set environment variables
      - name: Set environment
        run: |
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          echo "ARCH=$ARCH" >> $GITHUB_ENV
          echo "CROSS_COMPILE=$CROSS_COMPILE" >> $GITHUB_ENV

      # 4. Clean previous build (optional but recommended)
      - name: Clean previous build
        run: |
          make O=out mrproper

      # 5. Configure Kernel (GKI)
      - name: Configure Kernel
        run: |
          make O=out gki_defconfig

      # 6. Build Kernel
      - name: Build Kernel
        run: |
          make -j$(nproc) O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-

      # 7. Archive Kernel Image & dtb
      - name: Archive Kernel
        run: |
          mkdir -p kernel_build
          cp out/arch/arm64/boot/Image.gz-dtb kernel_build/

      # 8. Upload artifact
      - name: Upload Kernel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: kernel_build/
