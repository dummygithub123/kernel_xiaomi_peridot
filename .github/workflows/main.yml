name: Kernel Build (Kleaf)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc bison flex git curl zip \
            libncurses5-dev libssl-dev ccache python3 python3-pip unzip

      - name: Setup Bazel
        uses: bazelbuild/setup-bazelisk@v3

      - name: Clone Kleaf infra
        run: |
          set -eux
          mkdir -p build/kernel
          git clone --depth=1 https://android.googlesource.com/kernel/build build/kernel/build
          
          # kalau ada kleaf di dalam build, symlink-kan
          if [ -d build/kernel/build/kleaf ]; then
            ln -sf ../build/kleaf build/kernel/kleaf
          else
            # bikin dummy kleaf biar Bazel gak error
            mkdir -p build/kernel/kleaf
          fi
          
          # bikin BUILD.bazel agar jadi package valid
          echo 'exports_files(glob(["**/*.bzl"]))' > build/kernel/kleaf/BUILD.bazel

      - name: Create MODULE.bazel if missing
        run: |
          if [ ! -f MODULE.bazel ]; then
            cat > MODULE.bazel <<'EOF'
module(
    name = "kernel_xiaomi_peridot",
    version = "1.0",
)

bazel_dep(name = "bazel_skylib", version = "1.4.2")
EOF
          fi

      - name: Build kernel
        run: |
          bazel build //:peridot_dist || bazel build //:allmods_peridot

      - name: Upload boot.img artifact
        uses: actions/upload-artifact@v4
        with:
          name: boot-image
          path: bazel-bin/*/boot.img
